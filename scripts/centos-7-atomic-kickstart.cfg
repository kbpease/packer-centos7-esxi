eula --agreed
ostreesetup --osname="centos-atomic-host" --remote="centos-atomic-host" --url="file:///install/ostree" --ref="centos-atomic-host/7/x86_64/standard" --nogpg

timezone America/New_York --isUtc
lang en_US.UTF-8

network --bootproto=dhcp --onboot=yes --hostname=atomic

services --disabled=network,avahi-daemon,cloud-init,cloud-init-local,cloud-config,cloud-final
services --enabled=NetworkManager,sshd,rsyslog

user --name=vagrant --password=vagrant
rootpw vagrant

user --groups=wheel --name=vagrant --password=vagrant

# Doesn't really do anything, but doesn't hurt either
firewall --disabled
selinux --permissive

zerombr
bootloader --location=mbr --boot-drive=sda --append="net.ifnames=0 biosdevname=0"

clearpart --all --initlabel --drives=sda

part /boot --fstype="ext2" --ondisk=sda --size=200

# Would normally do this as one huge non-lvm partition but ostree
# seems to be really unhappy when I do that.
part pv.01 --fstype="lvmpv" --ondisk=sda --size=8000
#part pv.02 --fstype="lvmpv" --ondisk=sda --grow --size=1
part pv.02 --fstype="lvmpv" --ondisk=sda --size=31000
volgroup centos --pesize=4096 pv.01
volgroup docker --pesize=4096 pv.02
logvol / --fstype="xfs" --size=1 --name=root --vgname=centos --grow

reboot

%post --erroronfail

fn=/etc/ostree/remotes.d/centos-atomic-host.conf; if test -f ${fn} && grep -q -e '^url=file:///install/ostree' ${fn}$; then rm ${fn}; fi

# Override udev net-rules
mkdir -p /etc/udev/rules.d/60-net.rules

# Add ^?"net.ifnames=0" and "biosdevname=0"
sed -i -e 's/quiet/net.ifnames=0 biosdevname=0 quiet/' /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg

# Clear out bad ifcfg scripts
rm -f /etc/sysconfig/network-scripts/ifcfg-e*

cat <<EOT >/etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
EOT

# Really cloud-init should be disabled by default, and enabled
# only in the openstack qcow2 and AMI.
systemctl mask cloud-init cloud-init-local cloud-config cloud-final

# The inherited cloud %post locks the passwd, but we want it
# unlocked for vagrant, just like downstream.
passwd -u root

# Vagrant setup
sed -i 's/Defaults\s*requiretty/Defaults !requiretty/' /etc/sudoers
echo 'vagrant ALL=NOPASSWD: ALL' > /etc/sudoers.d/vagrant-nopasswd
mkdir /home/vagrant
mkdir -m 0700 -p /home/vagrant/.ssh
cat > /home/vagrant/.ssh/authorized_keys << EOKEYS
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key
EOKEYS
chmod 600 /home/vagrant/.ssh/authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh/

# enable password authentication in /etc/ssh/sshd_config
sed -i 's/.*PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
sed -i 's/.*PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
sed -i 's/.*UseDNS.*/UseDNS no/' /etc/ssh/sshd_config

systemctl reboot

%end

